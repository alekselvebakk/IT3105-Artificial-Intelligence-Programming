[anet]
hidden_layers = [200]
learning_rate = 0.0000625
; Optimizers: SGD, Adam, Adagrad, RMSprop
optimizer = Adagrad
; activations: relu, sigmoid, softmax, tanh, linear
activation = relu
last_activation = softmax
epochs = 400
;standard epochs = 1
batch_size = 525
;standard batch_size = 32
validation_split = 0.3
verbosity = 1
net_with_critic = False
preloaded_actor_id = InstagramMicroLearning
preloaded_actor_number = 100


[board]
size = 6
see_game = []
;see_game range(0, actual_games)

[TOPP]
run_tournament = True
number_of_nets = 2
games_between_nets = 1000
save_actors = True
tournament_id = 1618929072
show_games_between = ''

[RL]
actual_games = 100
rollout_initial_probability = 1
rollout_final_probability = 1
epsilon_initial = 0.3
epsilon_final = 0.05
winning_reward = 15
losing_reward = -15
reward_discount_factor = 1
percent_before_critic = 100
minibatch = 750
increasing_prob_data = False
RBUF_trimming = True
RBUF_trimmed_max_size = 750

[MCTS]
tree_games = 1000
exploration_weight = 0.7
time_limit = 3
stochastic_root_choice = True

[OHT]
neural_net_id = MrDeep3
neural_net_number = 525
verbose = False

[ActorDuel]
actor0_id = InstagramMiniLongLearning
actor0_number = 100
actor1_id = InstagramMicroLearning
actor1_number = 100
number_of_games = 1000

[AdvancedTraining]
preloaded_actor_id = Underdog
preloaded_actor_number = 200
net_number = [0, 400, 525, 400, 200, 0]

[HoFTournament]
games_played = 1000
net_number = [100, 100, 100, 100, 100, 100, 100]

;net_number = [400,400,525,200,300,200,100,400]